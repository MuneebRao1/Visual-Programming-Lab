
using System;
using System.Collections.Generic;

namespace Myapp
{
    public class ClubRole
    {
        public string Name { get; set; }
        public string Role { get; set; }
        public string ContactInfo { get; set; }
    }
    class StudentClub
    {
        public double Budget { get; set; }
        public ClubRole President { get; set; }
        public ClubRole VicePresident { get; set; }
        public ClubRole GeneralSecretary { get; set; }
        public ClubRole FinanceSociety { get; set; }


        StudentClub()
        {
            Budget = 0;
            President = null;
        }
        StudentClub(double budget, ClubRole president, ClubRole vicePresident, ClubRole generalSecretary, ClubRole financeSociety)
        {
            Budget = budget;
            President = president;
            VicePresident = vicePresident;
            GeneralSecretary = generalSecretary;
            FinanceSociety = financeSociety;
        }

        public void registerSociety()
        {

            Console.WriteLine("Enter society name to register:");
            string societyname = Convert.ToString(Console.ReadLine());
            string newName;


            Console.WriteLine($"Society {societyname} Registered Successfully");
        }
           
        public void fundSociety()
        {
            Console.WriteLine("Fund registration");
            Console.WriteLine("Enter an amount to registered for society:");
            int amount=Convert.ToInt32(Console.ReadLine());
            Console.WriteLine("Fund registration completed");
        }
        public void dispensefunds()
        {
            Console.WriteLine("Fund dispensation");
        }

        public void displaySociety()
        {
            Console.WriteLine("Societies Displayed");
        }
        class Society
        {
            public string Name { get; set; }
            public int Number { get; set; }

            public void addActivity()
            {
                Console.WriteLine("Event Registration");
                Console.WriteLine("Enter any event name to be registered:");
                string activityname = Convert.ToString(Console.ReadLine());
                Console.WriteLine($"Event {activityname} has been registered successfully");
            }

            public void listEvents()
            {
                Console.WriteLine($"The event list");
            }
        }

        class FundedSociety : Society
        {

            public double fundingAmount { get; set; }

            public void fundInfo()
            {
                Console.WriteLine("The society fund information");
            }
        }

        class NonFundedSociety : Society
        {

            public double fundingAmount { get; set; }
        }

   
        public static void Main()
        {
           
            StudentClub studentClub = new StudentClub();
            Console.WriteLine("Welcome to Student Club Management System");
            Console.WriteLine("-----------------------------------------");
  
                Console.WriteLine("-----------Menu-------------");
                Console.WriteLine("1.Register a New Society");
                Console.WriteLine("2.Allocate Funding to Societies");
                Console.WriteLine("3.Register an event for society");
                Console.WriteLine("4.Display Society funding Information");
                Console.WriteLine("5.Display Events for new Society");
                Console.WriteLine("6.Exit");
            
            
            int choice = Convert.ToInt32(Console.ReadLine());

           
                switch (choice)

                {
                    case 1:
                        Console.WriteLine();
                        studentClub.registerSociety();
                        break;

                    case 2:
                        Console.WriteLine();
                        studentClub.fundSociety();
                        break;

                    case 3:
                        Console.WriteLine();
                    Society society = new Society();
                    society.addActivity();
                        break;

                    case 4:
                        Console.WriteLine();
                    FundedSociety fundedSociety = new FundedSociety();
                    fundedSociety.fundInfo();
                        break;

                    case 5:
                        Console.WriteLine();
                        studentClub.displaySociety();
                        break;

                
            }
        }
    }
}
